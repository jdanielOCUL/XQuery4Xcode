// XQuery language
(

/****************************************************************************/
// MARK: Keywords
/****************************************************************************/

    {
        Identifier = "xcode.lang.xquery.keyword";
        Syntax = {
            StartChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$@";
            Chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";
            Words = (
                "xquery",
                "version",
                "import",
                "module",
                "namespace",
                "let",
                "if",
                "else",
                "then",
                "return",
                "module",
                "declare",
                "function",
                "define",
                "as",
                "try",
                "catch",
                "not",
                "for",
                "at",
                "in",
                "typeswitch",
                "case",
                "default",
                "attribute",
                "type",
                "null"
            );
            Type = "xcode.syntax.identifier.variable";
            AltType = "xcode.syntax.identifier.variable.system";    // non-keywords are identifiers
        };
    },    

/****************************************************************************/
// MARK: Comments
/****************************************************************************/

    {
        Identifier = "xcode.lang.xquery.comment";
        Syntax = {
            Start = "(:";
            End = ":)";
            Foldable = YES;
            IncludeRules = ( "xcode.lang.url", "xcode.lang.url.mail", "xcode.lang.comment.mark" );
            Type = "xcode.syntax.comment";
        };
    },
    
    {
        Identifier = "xcode.lang.xquery.entity.start";
        Syntax = {
            Tokenizer = "xcode.lang.xquery.entity.lexer";
            Start = "<";
            End = ">";
            AltEnd = "/>";
            Type = "xcode.syntax.entity.start";
            AltType = "xcode.syntax.entity";
            AltToken = "xcode.lang.xml.entity.standalone";
        };
    },
    {
        Identifier = "xcode.lang.xquery.inline.block";
        Syntax = {
            Tokenizer = "xcode.lang.xml.lexer";
            Start = "{";
            End = "}";
            Foldable = YES;
            Recursive = YES;
            IncludeRules = (        // processed in order
                "xcode.lang.xquery.comment",
                "xcode.lang.xquery.keyword",
                "xcode.lang.xml.entity.element",
                "xcode.lang.xml.entity.entity",
                "xcode.lang.xml.entity.attlist",
                "xcode.lang.xml.entity.doctype",
                "xcode.lang.xml.entity.cdata",
                "xcode.lang.xquery.entity.block",
            );
        };
    },
    {
        Identifier = "xcode.lang.xquery.entity.lexer";
        Syntax = {
            IncludeRules = (
                "xcode.lang.xquery.inline.block",
                "xcode.lang.xml.word",
                "xcode.lang.xml.string",
                "xcode.lang.xml.string.singlequote",
            );
        };
    },

/****************************************************************************/
// MARK: xquery Syntax Coloring
/****************************************************************************/

    {
        Identifier = "xcode.lang.xquery";
        Description = "XQuery Coloring";
        IncludeInMenu = YES;
        BasedOn = "xcode.lang.xml";
        Name = "XQuery";
        Syntax = {
            Tokenizer = "xcode.lang.xquery.lexer";
            IncludeRules = (        // processed in order
                "xcode.lang.xquery.comment",
                "xcode.lang.xquery.keyword",
                "xcode.lang.xml.entity.element",
                "xcode.lang.xml.entity.entity",
                "xcode.lang.xml.entity.attlist",
                "xcode.lang.xml.entity.doctype",
                "xcode.lang.xml.entity.cdata",
                "xcode.lang.xquery.entity.block",
            );
            Type = "xcode.syntax.plain";
        };
    },
    {
        Identifier = "xcode.lang.xquery.lexer";
        Syntax = {
            IncludeRules = (
                "xcode.lang.xml.comment",
                "xcode.lang.xml.interestingOperators",
                "xcode.lang.xml.other.interestingOperators",
                "xcode.lang.xml.other.cdata",
                "xcode.lang.xml.entity.end",
                "xcode.lang.xml.entity.start",
                "xcode.lang.xml.character",
                "xcode.lang.string",
                "xcode.lang.character",
                "xcode.lang.number",
            );
        };
    },
    {
        Identifier = "xcode.lang.xquery.entity.block";
        Syntax = {
            Tokenizer = "xcode.lang.xml.lexer";
            Start = "xcode.lang.xquery.entity.start";
            End = "xcode.lang.xml.entity.end";
            Recursive = YES;
            Foldable = YES;
            Type = "xcode.syntax.definition.function";
            IncludeRules = (
                "xcode.lang.xml.processing",
                "xcode.lang.xml.entity.element",
                "xcode.lang.xml.entity.entity",
                "xcode.lang.xml.entity.attlist",
                "xcode.lang.xml.entity.doctype",
                "xcode.lang.xml.entity.cdata",
            );
        };
    },
)
